server {
	listen 80;
  	server_name gracious-kare.cloud www.gracious-kare.cloud;        #Redirecting HTTP request to HTTPS
	return 301 https://$host$request_uri;
}

server {
	listen 443 ssl;
  	listen [::]:443 ssl;
	server_name gracious-kare.cloud www.gracious-kare.cloud;

	ssl_certificate /ssl/origin.pem;
	ssl_certificate_key /ssl/privateCF.pem;
	#ssl_certificate /ssl/domain.cert.pem;
	#ssl_certificate_key /ssl/private.key.pem;

	#root /var/www/html;
	#index index.html index.htm index.nginx-debian.html;

	location / {
    proxy_pass http://frontend:3000;
  }
  
  location /be/ {
    # This section handles requests to the backend.
    proxy_redirect http:// https://;
    proxy_pass http://backend:3001/;
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Additional headers for CORS support
    add_header 'Access-Control-Allow-Origin' 'https://www.gracious-kare.cloud' always; # Change this to * if you want to allow all origins to access your backend locally
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://www.gracious-kare.cloud' always; # Change this to * if you want to allow all origins to access your backend locally
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Content-Length' 0;
        add_header 'Content-Type' 'text/plain' always;
        return 204;
    }
  }

	location ~/.well-known/acme-challenge {
    allow all;
		#root /var/www/html;
	}
}

upstream jenkins {
  server jenkins:8080 fail_timeout=0;
}

server {
  listen 443 ssl;
  server_name jenkins.gracious-kare.cloud www.jenkins.gracious-kare.cloud;

  ssl_certificate /ssl/origin.pem;
  ssl_certificate_key /ssl/privateCF.pem;

  location / {
    proxy_set_header        Host $host:$server_port;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_redirect          http:// https://;
    proxy_pass              http://jenkins;
    # Required for new HTTP-based CLI
    proxy_http_version 1.1;
    proxy_request_buffering off;
    proxy_buffering off; # Required for HTTP-based CLI to work over SSL
    # workaround for https://issues.jenkins-ci.org/browse/JENKINS-45651
    add_header 'X-SSH-Endpoint' 'jenkins.gracious-kare.cloud:50022' always;
  }
}
